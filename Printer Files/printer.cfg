#----------------------------------------------------------------------------
#      ____                _  __         __  ____              
#     / __ \___  ___ ___  / |/ /__ ___  / /_/ / /__ _____  ___ 
#    / /_/ / _ \/ -_) _ \/    / -_) _ \/ __/_  _/ // / _ \/ -_)
#    \____/ .__/\__/_//_/_/|_/\__/ .__/\__/ /_/ \_,_/_//_/\__/ 
#        /_/                    /_/                            
#----------------------------------------------------------------------------
;   Neptune 4 Series Custom Image by (OpenNeptune3D/OpenNept4une):
#----------------------------------------------------------------------------
; Wiki    : https://github.com/OpenNeptune3D/OpenNept4une/wiki
; Discord : https://discord.com/invite/X6kwchT6WM

#############################################################################
#   External Config Includes
#############################################################################
[include mainsail.cfg]          ; mainsail runs on port 81 (http://IP_ADDRESS:81)
[include fluidd.cfg]
[include KAMP_Settings.cfg]
[include Adaptive_Meshing.cfg] 
[include Smart_Park.cfg]
[include Line_Purge.cfg]
#[include shell_command.cfg]
#[include klipper_debug.cfg]
#[include adxl.cfg]             ; Comment this out when you disconnect the Pico/MellowFly
#[include timelapse.cfg]


#############################################################################
#   Base Config
#############################################################################

[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[mcu]
serial: /dev/ttyS0 ; The hardware use USART1 PA10/PA9 connect to RK3328
baud: 250000
restart_method: command

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 10000
max_z_velocity: 8
max_z_accel: 120
square_corner_velocity: 9.0
minimum_cruise_ratio: 0.1

[respond]
[gcode_arcs]
[pause_resume]
[display_status]
[exclude_object]
[firmware_retraction]
[virtual_sdcard]
path: ~/printer_data/gcodes
[force_move]
enable_force_move : True
[idle_timeout]
timeout: 2100                  ; 35min idle timeout (when not paused or printing)

#############################################################################
#   X/Y/Z Stepper Config
#############################################################################

[stepper_x]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 64
rotation_distance: 40
full_steps_per_rotation:200                  ; set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_max: 415
position_endstop: 415
homing_speed: 40
homing_retract_dist: 0
homing_positive_dir: True

[stepper_y]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC15
microsteps: 64
rotation_distance: 40
full_steps_per_rotation:200                  ; set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_max: 415
position_endstop: 415
homing_speed:40
homing_retract_dist: 0
homing_positive_dir: True

[stepper_z]
step_pin: PC10
dir_pin: PA13
enable_pin: !PC11
microsteps: 32
rotation_distance: 2
full_steps_per_rotation: 200
endstop_pin:probe:z_virtual_endstop
position_min: -1
position_max: 700
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 5
homing_positive_dir: False


[stepper_z1]
step_pin: PB1
dir_pin: !PB2
enable_pin: !PB0
microsteps: 32
rotation_distance: 2
full_steps_per_rotation: 200
endstop_pin:probe:z_virtual_endstop




#############################################################################
#   TMC Stepper-driver UART Config
#############################################################################

[tmc2209 stepper_x]
uart_pin: PB9
run_current: 1.0
interpolate: True
stealthchop_threshold: 0
driver_SGTHRS: 70
diag_pin: ^PC0

[tmc2209 stepper_y]
uart_pin: PD2
run_current: 1.4
interpolate: True
stealthchop_threshold: 0
driver_SGTHRS: 70
diag_pin: ^PB8

[tmc2209 stepper_z]
uart_pin: PC5
run_current: 0.8
#hold_current: 0.5
interpolate: True
stealthchop_threshold: 0
driver_SGTHRS: 200

[tmc2209 stepper_z1]
uart_pin: PB6
run_current: 0.8
hold_current: 0.5
interpolate: True
stealthchop_threshold: 0
driver_SGTHRS: 200

[tmc2209 extruder]
uart_pin: PC4
run_current: 0.7
hold_current: 0.5
interpolate: True
stealthchop_threshold: 0

[z_tilt]
z_positions:
    30,180   # X, Y position of the first Z motor
    410,180  # X, Y position of the second Z motor
points:
    30,180   # X, Y position of the first Z motor
    410,180  # X, Y position of the second Z motor
speed: 50
horizontal_move_z: 5
retries: 25
retry_tolerance: 0.001



#############################################################################
#   Probe Config
#############################################################################

[probe]
pin:^PA11
x_offset: -20
y_offset: 20.45
#z_offset = 0.0
speed: 10.0
samples: 7
samples_result: median 
sample_retract_dist: 3.0
samples_tolerance: 0.025
samples_tolerance_retries: 3

[bed_mesh]
speed:300                
horizontal_move_z:5  
mesh_min: 10,21
mesh_max: 400,404
probe_count: 11,11          
algorithm:bicubic
bicubic_tension:0.2
mesh_pps: 4, 4 
fade_start: 0 ;Old setting 1.0
fade_end: 10.0 

#############################################################################
#   Print Start & End Macros
#############################################################################

[gcode_macro PRINT_START]   
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    G92 E0 
    G90                       ; Use absolute coordinates
    M117 Clear Bed Mesh
    BED_MESH_CLEAR    
       
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
    {% set BED_MESH = params.BED_MESH|default('adaptive')|string %} ; One of: adaptive (default), full, default (or any other value as the bed mesh profile name), none
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}


    SET_BED_TEMPERATURE TARGET={BED_TEMP}                           ; Heat Bed to target temp
    BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}  ; Waits until the bed reaches close to target
    {% if BED_HEAT_SOAK_MINUTES > 0 %}
    RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
    G4 P{BED_HEAT_SOAK_MINUTES * 60000}
    {% endif %}

    CG28
    
    M117 Prep Bed Mesh
    {% if BED_MESH == 'full' %}
    BED_MESH_CALIBRATE
    {% elif BED_MESH == 'adaptive' %}
    BED_MESH_CALIBRATE ADAPTIVE=1
    {% elif BED_MESH != 'none' %}
    BED_MESH_PROFILE LOAD={BED_MESH}
    {% endif %}
    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}   ; Set and heat the final extruder temperature
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}  ; Wait for extruder to reach near target temperature

    M117 Printing
    G92 E0                                                          ; Reset Extruder
    G1 Z2.0 F3000                                                   ; Move Z Axis up 
    #KAMP Smart Park
    SMART_PARK
    #KAMP Line Purge
    LINE_PURGE                                                      ; KAMP Line Purge near print
              
       
[gcode_macro PRINT_END]
gcode:
    M117 Completed
    M400                    ; wait for buffer to clear
    TURN_OFF_HEATERS
    G92 E0                  ; zero the extruder
    G91                     ; Relative positioning
    G1 E-2 F2700            ; Retract a bit
    G1 X5 Y5 F3000          ; Wipe out
    G1 E-2 Z0.2 F1600       ; Retract and raise Z
    G1 Z4 F3000             ; Raise Z more
    G90                     ; Absolute positioning
    G1 X415 Y415            ; Present print
    END_TUNE                ; Print End Beeper Jingle
    M107                    ; turn off fan
    M84                     ; turn off steppers
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1


#############################################################################
#   Pause, Resume & Cancel Macros
#############################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  PAUSE_TUNE
  {% set z = params.Z|default(30)|int %}                                                   ; z hop amount 30mm
  {% if printer['pause_resume'].is_paused|int == 0 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                  ; disable filament sensor
      SAVE_GCODE_STATE NAME=PAUSE                                                          ; save the current print position for resume, before z-hop
      BASE_PAUSE
      M117 Paused                                                                           ; pause print
      G91                                                                           
      {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 Z{z} F1600                                                                ; Retract 2mm more & raise z by z hop amount 
          SAVE_GCODE_STATE NAME=ZLIFT                                                      ; save the current print position for resume, after z-hop
      {% else %}
          { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
          SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 F1600                                                                     ; Retract 2mm more
          SAVE_GCODE_STATE NAME=ZLIFT
      {% endif %}
      G90
      G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000   ; park toolhead at the rear left of the bed
      SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save the parked position
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160                                    ; cool down hotend to no-drip temp
      SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set idle timeout to 12 hours (in seconds)
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {% if printer['pause_resume'].is_paused|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                           ; enable filament sensor
      M117 Printing
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}   ; set timeout back to configured value
      {% if etemp > 0 %}
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}  ; wait for hotend to heat back up to print temp
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                      ; go back to park position in case toolhead was moved during pause                                                                        ; enable extruder stepper motor
      G91                                                                           ; relative positioning
      M83                                                                           ; set extruder to relative mode
      G1 E80  F200                                                                  ; extrude 80mm of filament to prime the nozzle
      G4 P2000                                                                      ; wait for 2 seconds to stabilise pressure
      G1 X20 F15000                                                                 ; wiggle movement to ensure free movement of purge
      G1 X-20
      G1 X20
      G1 X-20
      G1 X20
      G1 X-20
      RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60                           ; restore to the zlift position above the print
      G1 X-3 Y-3 F3000                                                              ; Undo the pause Wipe out 
      G1 Z{zhop * -1} F900  
      RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                           ; restore to the paused position (lowers to final print location)
      M400                                                                          ; wait for all moves to complete
      BASE_RESUME                                                                   ; resume print
  {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}      ; set timeout back to configured value
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT
  M117 Cancelled

#############################################################################
#   Filament Sensor & Change Macros
#############################################################################

[filament_switch_sensor filament_sensor]
pause_on_runout: True
runout_gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    M118 ;Filament detection is triggered,please check.
insert_gcode:
event_delay: 3.0
pause_delay: 1.0
switch_pin: PA12

[delayed_gcode DISABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro M600]
description: Pause for colour change
gcode:
  PAUSE
  UNLOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  25
variable_purge_distance:  30
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  G92 E0
  G1 E{load_distance} F{max_velocity}          ; fast-load
  G1 E{purge_distance} F{speed}                ; purge
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  55
variable_purge_distance:  15
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=unload_state
  G91
  G92 E0
  G1 E{purge_distance} F{speed}                ; purge
  G1 E-{unload_distance} F{max_velocity}       ; fast-unload
  RESTORE_GCODE_STATE NAME=unload_state



#############################################################################
#   Extruder Config
#############################################################################

[extruder]
step_pin:PA5
dir_pin:!PA6
enable_pin:!PA4
microsteps: 32
rotation_distance: 28.310                     ; 31.4 Bondtech 5mm Drive Gears
gear_ratio: 52:10
full_steps_per_rotation: 200                  ; 200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 330
heater_pin: PA7
sensor_type:NTC 100K MGB18-104F39050L32
sensor_pin: PA1
max_power: 1
#control = pid
#pid_kp = 25.718
#pid_ki = 3.297
#pid_kd = 50.150
pressure_advance: 0.0442
pressure_advance_smooth_time: 0.04
max_extrude_cross_section: 5                  ; standard klipper default 4* (NozzleDiam^2)
instantaneous_corner_velocity: 5.0
max_extrude_only_distance: 100
max_extrude_only_velocity:45
max_extrude_only_accel:2000
step_pulse_duration:0.000002

[verify_heater extruder]
max_error: 30
check_gain_time: 10
hysteresis: 10
heating_gain: 2

#############################################################################
#   Bed Heater Config
#############################################################################

[heater_bed]
heater_pin:PB10
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
max_power: 1.0
#control = pid
#pid_kp = 75.397
#pid_ki = 0.823
#pid_kd = 1727.531
min_temp: 0
max_temp: 120 
pwm_cycle_time: 0.3

[verify_heater heater_bed]
max_error: 120
check_gain_time: 120
hysteresis: 10
heating_gain: 2

[gcode_macro SET_BED_TEMPERATURE]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    {% if params.MINIMUM is defined and params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
    {% elif params.MINIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
    {% elif params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
    {% else %}
      RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
    {% endif %}



#############################################################################
#   LED Config
#############################################################################

[output_pin Frame_Light]
pin: rpi:gpiochip2/gpio2

[output_pin Part_Light]
pin: rpi:gpiochip2/gpio15

[gcode_macro Frame_Light_ON]
gcode:
  SET_PIN PIN=Frame_Light VALUE=1

[gcode_macro Frame_Light_OFF]
gcode:
  SET_PIN PIN=Frame_Light VALUE=0

[gcode_macro Part_Light_ON]
gcode:
  SET_PIN PIN=Part_Light VALUE=1

[gcode_macro Part_Light_OFF]
gcode:
  SET_PIN PIN=Part_Light VALUE=0


#############################################################################
#   Pre-Heat Config
#############################################################################

[gcode_macro PRE_HEAT_60]
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60

[gcode_macro PRE_HEAT_65]
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=65

[gcode_macro PRE_HEAT_70]
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70

#############################################################################
#   Beeper Config
#############################################################################

[pwm_cycle_time beeper]
pin: PA2
value: 0
shutdown_value: 0
cycle_time: 0.0005                                  ; Default PWM frequency: 2 kHz

[gcode_macro M300]
gcode:
    {% set S = params.S|default(2000)|int %}        ; Set frequency (S), default to 2 kHz if omitted or invalid
    {% set P = params.P|default(100)|int %}         ; Set duration (P), default to 100ms if omitted or invalid
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/S if S > 0 else 1 }       ; Activate the beeper at a 80% duty cycle
    G4 P{P}                                         ; Hold the beep for the specified duration
    SET_PIN PIN=beeper VALUE=0                      ; Turn off the beeper

[gcode_macro PAUSE_TUNE]
gcode:
    M300 S784 P300
    M300 S587 P600
    
[gcode_macro END_TUNE]
gcode:
    M300 S392 P250 
    M300 S494 P250 
    M300 S587 P250 
    M300 S523 P300 

#############################################################################
#   Fan & Temp Monitoring Config
#############################################################################

[controller_fan heatbreak+mainboard_fan]
pin: PC7
fan_speed: 1.0
idle_speed: 0.5
idle_timeout: 43200                                     ; 50% speed for 12h then OFF
shutdown_speed: 1
heater: extruder, heater_bed
stepper: stepper_x, stepper_y, stepper_z, extruder

[fan]
pin: PB7
[fan_generic fan3]
pin: PC9
[fan_generic fan4]
pin: PA8
[fan_generic fan5]
pin: PA15

[delayed_gcode start_fan_at_idle_speed]
initial_duration: 5.                                ; 5s wait after boot
gcode:
  # Gcode Hack to trigger the mainboard fan from printer boot
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=1 ; bed heat to 1degC
  G4 P2000                                          ; wait 2s
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0 ; bed heat off

[temperature_sensor RockchipHost]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor STM32MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 85

#############################################################################
#   Homing & Levelling Config/Macros
#############################################################################

[gcode_macro CG28]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
  {% else %}
  {% endif %}
  
[safe_z_home]
home_xy_position: 210,210
speed: 100
z_hop: 10                 
z_hop_speed: 5

[axis_twist_compensation]
calibrate_start_x: 25
calibrate_end_x: 395
calibrate_y: 210

[gcode_macro Axis_Twist_Comp_Tune]
gcode:    
      CG28
      AXIS_TWIST_COMPENSATION_CALIBRATE

[screws_tilt_adjust]
screw1: 232,255  
screw1_name: middle-rear bed mount (shim adjust)
screw2: 232,130 
screw2_name: middle-front bed mount (shim adjust)
screw3: 52,370           
screw3_name: rear left screw
screw4: 52,190          
screw4_name: center left screw
screw5: 52,15            
screw5_name: front left screw
screw6: 408,15
screw6_name: front right screw
screw7: 408,190
screw7_name: center right screw
screw8: 408,370
screw8_name: rear right screw
horizontal_move_z: 5
speed: 150
screw_thread: CCW-M4

[gcode_macro Level_Bed_Screws_Tune]
gcode:
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=60
      BED_TEMPERATURE_WAIT MINIMUM=55 MAXIMUM=65
      CG28
      SCREWS_TILT_CALCULATE
      G1 X240 Y420 F5000

[gcode_macro Calibrate_Probe_Z_Offset]
description: "Home and start Z-probe offset calibration"
gcode:
      CG28                        ; Home all axes
      M117 Starting Z Offset Calibration ; Display a message
      PROBE_CALIBRATE            ; Start probe calibration
      
[gcode_macro Auto_Full_Bed_Level]
gcode:
      RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=60
      BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
      CG28
      BED_MESH_CALIBRATE

[gcode_macro RUN_Z_TILT]
description: "Run the Z Tilt Adjustment"
gcode:
    G28                                         ;Home the printer before running Z Tilt Adjustment
    G1 Z10 F300                                 ;Optional: Move the Z axis to a safe height
    Z_TILT_ADJUST                               ;Run Z Tilt Adjustment
    M117 "Z Tilt Adjust Complete!"

#############################################################################
#   6 Point Bed Movement
#############################################################################

[gcode_macro BED_POINT_REAR_LEFT]
description: "Move to Bed Point Rear Left"
gcode:
  G91                      ; Relative positioning
  G1 Z10 F200              ; Raise Z axis by 20mm
  G90                      ; Absolute positioning
  G1 X52 Y370 F3000         ; Move to Bed Point 1
  G1 Z10 F200              ; Lower Z axis to 10mm
  echo "Move to Bed Point Rear Left"

[gcode_macro BED_POINT_CENTER_LEFT]
description: "Move to Bed Point Center Left"
gcode:
  G91
  G1 Z10 F200
  G90
  G1 X52 Y190 F3000
  G1 Z10 F200
  echo "Move to Bed Point Center Left"

[gcode_macro BED_POINT_FRONT_LEFT]
description: "Move to Bed Point Front Left"
gcode:
  G91
  G1 Z10 F200
  G90
  G1 X52 Y15 F3000
  G1 Z10 F200
  echo "Move to Bed Point Front Left"

[gcode_macro BED_POINT_FRONT_RIGHT]
description: "Move to Bed Point Front Right"
gcode:
  G91                      ; Relative positioning
  G1 Z10 F200              ; Raise Z axis by 20mm
  G90                      ; Absolute positioning
  G1 X408 Y15 F3000         ; Move to Bed Point 1
  G1 Z10 F200              ; Lower Z axis to 10mm
  echo "Move to Bed Point Front Right"

[gcode_macro BED_POINT_CENTER_RIGHT]
description: "Move to Bed Point Center Right"
gcode:
  G91
  G1 Z10 F200
  G90
  G1 X408 Y190 F3000
  G1 Z10 F200
  echo "Move to Bed Point Center Right"

[gcode_macro BED_POINT_REAR_RIGHT]
description: "Move to Bed Point Rear Right"
gcode:
  G91
  G1 Z10 F200
  G90
  G1 X408 Y370 F3000
  G1 Z10 F200
  echo "Move to Bed Point Rear Right"


#############################################################################
#   PID Tuning Macros
#############################################################################

[gcode_macro PID_Tune_EXTRUDER]
gcode:
  {% set temperature = params.TEMPERATURE|default(210) %}
  CG28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
  {% set temperature = params.TEMPERATURE|default(60) %}
  CG28
  M106 S255 ;Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG
  
#############################################################################
#   Speed Tuning Macros
#############################################################################

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#=====================================================
# MANUAL SET CAPTURE TARGET
#=====================================================
[gcode_macro GPHOTO_SET_TARGET]
gcode:
    RUN_SHELL_COMMAND CMD=gphoto2_set_config

#=====================================================
# TAKE SNAPSHOT COMMAND
#=====================================================
[gcode_macro TAKE_SNAPSHOT]
description: Saves current location, moves toolhead to rear of bed, and takes a snapshot before returning.
gcode:
  {% set delayMS = 2000 %} ; Delay after moving and before taking the snapshot, deals with buffering so we don't get the print head in motion
  {% set snapshotPositionX = printer.toolhead.axis_maximum.x / 2 %} ; Middle of bed
  {% set snapshotPositionY = printer.toolhead.axis_maximum.y - 5 %} ; rear of bed w/ some buffer
  {% set currentX = printer.gcode_move.gcode_position.x %}
  {% set currentY = printer.gcode_move.gcode_position.y %}
  {% set currentZ = printer.gcode_move.gcode_position.z %} ; could be used for z-hop which we are not doing in this macro, so it's best to run this in AFTER_LAYER_CHANGE
  SAVE_GCODE_STATE NAME=take_snapshot_state

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G10 ; retract
  {% endif %}

  G90

  G0 X{snapshotPositionX} Y{snapshotPositionY} F5000.0 ;Move to snapshot position

  G4 P{delayMS} ; Dwell for delayMS seconds

  RUN_SHELL_COMMAND CMD=gphoto2_trigger_snapshot

  G0 X{currentX} Y{currentY} F5000.0 ;Return to original position

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G11 ; unretract
  {% endif %}

  RESTORE_GCODE_STATE NAME=take_snapshot_state

#=====================================================
# MANUAL SNAPSHOT TEST
#=====================================================
[gcode_macro GPHOTO_SNAPSHOT_TEST]
gcode:
    RUN_SHELL_COMMAND CMD=gphoto2_trigger_snapshot
    
#############################################################################
#   SPI Accelerometer Config
#############################################################################    
      
[mcu rpi] 
serial: /tmp/klipper_host_mcu

[adxl345 x]
cs_pin: rpi:None
spi_bus: spidev0.0
axes_map:x,z,-y

[adxl345 y]
cs_pin: rpi:None
spi_bus: spidev0.1
axes_map:-x,-y,-z

[resonance_tester]
accel_chip_x: adxl345 x
accel_chip_y: adxl345 y
probe_points:
    215, 215, 20

#############################################################################
#   Input Shaper Config
#############################################################################

[input_shaper]
#shaper_type_x: zv
#shaper_freq_x: 116.2
#shaper_type_y: zv
#shaper_freq_y: 38.8

#############################################################################

[include user_settings.cfg]     ; Users custom macros 


#############################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.042500, -0.019688, -0.006250, -0.043750, -0.064063, -0.052813
#*# 	0.008437, 0.021875, 0.040000, -0.002188, -0.015938, -0.024063
#*# 	0.019062, 0.040312, 0.059375, 0.019062, 0.008125, 0.001250
#*# 	0.022187, 0.047500, 0.064062, 0.028750, 0.003437, -0.007188
#*# x_count = 6
#*# y_count = 4
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 115.001
#*# max_x = 304.951
#*# min_y = 155.0
#*# max_y = 264.98
#*#
#*# [probe]
#*# z_offset = 1.615
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.661
#*# pid_ki = 7.349
#*# pid_kd = 27.945
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 75.167
#*# pid_ki = 0.743
#*# pid_kd = 1899.853
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 53.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 23.2
